@page "/createcourse"
@using HundeProjekt.Models
@inject HttpClient Http

<h3>Opret Bane</h3>

<div class="mainFlexContainer">
    <div class="exerciseFlexContainer">
        <div id="exercises" class="container">
            <div class="dragExercise">Ikon</div>
            <div class="dragExercise">Ikon2</div>
        </div>   
    </div>
@* 
    <div class="horizontalContainer">
        @for (int i = 1; i <= 10; i++)
        {
            <div class="courseHorizontalGridContainer">
                <div id="course@(i)" class="container"></div>
            </div>
        }
    </div>

    <div class="verticalContainer">
        @for (int i = 1; i <= 10; i++)
        {
            <div class="courseVerticalGridContainer">
                <div id="course1@(i)" class="container"></div>
            </div>
        }
    </div> *@

    <div class="mainFlexContainer">
        <div class="exerciseFlexContainer">
            <div id="exercises" class="container">
                <div class="dragExercise">Ikon</div>
                <div class="dragExercise">Ikon2</div>
            </div>
        </div>

        <div class="mainGridContainer">
            @for (int i = 1; i <= 112; i++)
            {
                <div class="courseHorizontalGridContainer">
                    <div id="course@(i)" class="container"></div>
                </div>
            }
        </div>
    </div>

    @* <div class="courseGridContainer">
        <div id="course1" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course2" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course3" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course4" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course5" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course6" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course7" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course8" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course9" class="container"></div>
    </div>
    <div class="courseGridContainer">
        <div id="course10" class="container"></div>
    </div> *@
</div>


@* @code {
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("init");
        }
    }
} *@

@code {
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("init");
          
            // Tilføj flere initialiseringer efter behov
        }
    }
}




<EditForm Model="@course" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="CourseName">Banenavn:</label>
        <InputText id="CourseName" class="form-control" @bind-Value="@course.CourseName" />
    </div>
    <div class="form-group">
        <label for="CourseDate">Banedato:</label>
        <InputDate id="CourseDate" class="form-control" @bind-Value="@course.CourseDate" />
    </div>

    <button type="submit" class="btn btn-primary">Opret Bane</button>
</EditForm>





@if (showSuccessMessage)
{
    <div class="alert alert-success" role="alert">
        Kursus oprettet succesfuldt!
    </div>
}

@if (showErrorMessage)
{
    <div class="alert alert-danger" role="alert">
        Der opstod en fejl ved oprettelsen af kurset. @errorMessage
    </div>
}

@code {
    private Course course = new Course();
    private bool showSuccessMessage = false;
    private bool showErrorMessage = false;
    private string errorMessage;


    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7259/api/Courses/Create", course); //Fuld sti istedet for relativ sti
            response.EnsureSuccessStatusCode(); // Sikrer, at anmodningen var vellykket

            showSuccessMessage = true;
            showErrorMessage = false;
        }
        catch (HttpRequestException ex)
        {
            // Håndter fejlen
            showSuccessMessage = false;
            showErrorMessage = true;
            errorMessage = ex.Message; // Gem den faktiske fejlbesked
        }
    }
}
